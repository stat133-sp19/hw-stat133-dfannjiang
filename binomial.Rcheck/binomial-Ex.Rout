
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin18.5.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "binomial"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "binomial-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('binomial')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("bin_choose")
> ### * bin_choose
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: bin_choose
> ### Title: Combinations of k successes in n trials
> ### Aliases: bin_choose
> 
> ### ** Examples
> 
> # one success - 5 choose 3
> bin_choose(5, 3)
[1] 10
> 
> # multiple successes - 5 choose 1, 2, 3
> bin_choose(5, 1:3)
[1]  5 10 10
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("bin_choose", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("bin_cumulative")
> ### * bin_cumulative
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: bin_cumulative
> ### Title: Binomial probability distribution with cumulative probabilities
> ### Aliases: bin_cumulative
> 
> ### ** Examples
> 
> # binomial probability distribution (with cumulative probabilities)
> # using 20 trials and 45% chance of success on each trial
> bin_cumulative(20, 0.45)
   success  probability   cumulative
1        0 6.415844e-06 6.415844e-06
2        1 1.049865e-04 1.114024e-04
3        2 8.160317e-04 9.274341e-04
4        3 4.005974e-03 4.933408e-03
5        4 1.392986e-02 1.886327e-02
6        5 3.647092e-02 5.533419e-02
7        6 7.459960e-02 1.299338e-01
8        7 1.220721e-01 2.520059e-01
9        8 1.623004e-01 4.143062e-01
10       9 1.770550e-01 5.913612e-01
11      10 1.593495e-01 7.507106e-01
12      11 1.185244e-01 8.692350e-01
13      12 7.273087e-02 9.419659e-01
14      13 3.661974e-02 9.785856e-01
15      14 1.498080e-02 9.935664e-01
16      15 4.902808e-03 9.984693e-01
17      16 1.253559e-03 9.997228e-01
18      17 2.413269e-04 9.999641e-01
19      18 3.290821e-05 9.999970e-01
20      19 2.834200e-06 9.999999e-01
21      20 1.159445e-07 1.000000e+00
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("bin_cumulative", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("bin_distribution")
> ### * bin_distribution
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: bin_distribution
> ### Title: Binomial probability distribution
> ### Aliases: bin_distribution
> 
> ### ** Examples
> 
> # binomial probability distribution with 20 trials and 45% chance of success on each trial
> bin_distribution(20, 0.45)
   success  probability
1        0 6.415844e-06
2        1 1.049865e-04
3        2 8.160317e-04
4        3 4.005974e-03
5        4 1.392986e-02
6        5 3.647092e-02
7        6 7.459960e-02
8        7 1.220721e-01
9        8 1.623004e-01
10       9 1.770550e-01
11      10 1.593495e-01
12      11 1.185244e-01
13      12 7.273087e-02
14      13 3.661974e-02
15      14 1.498080e-02
16      15 4.902808e-03
17      16 1.253559e-03
18      17 2.413269e-04
19      18 3.290821e-05
20      19 2.834200e-06
21      20 1.159445e-07
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("bin_distribution", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("bin_probability")
> ### * bin_probability
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: bin_probability
> ### Title: Probability of successes in a number of trials
> ### Aliases: bin_probability
> 
> ### ** Examples
> 
> # one success - probability of 3 successes in 5 trials
> # with 50% chance of success on each trial
> bin_probability(3, 5, 0.5)
[1] 0.3125
> 
> # multiple successes - probability of 3, 4 successes in 5 trials
> # with 50% chance of success on each trial
> bin_probability(3:4, 5, 0.5)
[1] 0.31250 0.15625
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("bin_probability", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("bin_variable")
> ### * bin_variable
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: bin_variable
> ### Title: Binomial random variable object
> ### Aliases: bin_variable
> 
> ### ** Examples
> 
> # a binomial random variable with 20 trials and a 45% chance of success on each trial
> bin_variable(20, 0.45)
"Binomial variable"

Parameters
- number of trials: 20 
- prob of success: 0.45 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("bin_variable", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.432 0.05 0.525 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
